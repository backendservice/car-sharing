// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car_sharing.proto

package CarSharing

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// request
type RegisterCarRequest struct {
	OwnerName            string   `protobuf:"bytes,1,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	Model                string   `protobuf:"bytes,2,opt,name=Model,proto3" json:"Model,omitempty"`
	Place                string   `protobuf:"bytes,3,opt,name=Place,proto3" json:"Place,omitempty"`
	StartDate            string   `protobuf:"bytes,4,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,5,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterCarRequest) Reset()         { *m = RegisterCarRequest{} }
func (m *RegisterCarRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterCarRequest) ProtoMessage()    {}
func (*RegisterCarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{0}
}
func (m *RegisterCarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterCarRequest.Unmarshal(m, b)
}
func (m *RegisterCarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterCarRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterCarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCarRequest.Merge(dst, src)
}
func (m *RegisterCarRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterCarRequest.Size(m)
}
func (m *RegisterCarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCarRequest proto.InternalMessageInfo

func (m *RegisterCarRequest) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *RegisterCarRequest) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RegisterCarRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *RegisterCarRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *RegisterCarRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

// response
type RegisterCarReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	CarId                string   `protobuf:"bytes,2,opt,name=CarId,proto3" json:"CarId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterCarReply) Reset()         { *m = RegisterCarReply{} }
func (m *RegisterCarReply) String() string { return proto.CompactTextString(m) }
func (*RegisterCarReply) ProtoMessage()    {}
func (*RegisterCarReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{1}
}
func (m *RegisterCarReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterCarReply.Unmarshal(m, b)
}
func (m *RegisterCarReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterCarReply.Marshal(b, m, deterministic)
}
func (dst *RegisterCarReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCarReply.Merge(dst, src)
}
func (m *RegisterCarReply) XXX_Size() int {
	return xxx_messageInfo_RegisterCarReply.Size(m)
}
func (m *RegisterCarReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCarReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCarReply proto.InternalMessageInfo

func (m *RegisterCarReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RegisterCarReply) GetCarId() string {
	if m != nil {
		return m.CarId
	}
	return ""
}

// request
type SearchCarsRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Model                string   `protobuf:"bytes,2,opt,name=Model,proto3" json:"Model,omitempty"`
	Place                string   `protobuf:"bytes,3,opt,name=Place,proto3" json:"Place,omitempty"`
	StartDate            string   `protobuf:"bytes,4,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,5,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCarsRequest) Reset()         { *m = SearchCarsRequest{} }
func (m *SearchCarsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchCarsRequest) ProtoMessage()    {}
func (*SearchCarsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{2}
}
func (m *SearchCarsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCarsRequest.Unmarshal(m, b)
}
func (m *SearchCarsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCarsRequest.Marshal(b, m, deterministic)
}
func (dst *SearchCarsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCarsRequest.Merge(dst, src)
}
func (m *SearchCarsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchCarsRequest.Size(m)
}
func (m *SearchCarsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCarsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCarsRequest proto.InternalMessageInfo

func (m *SearchCarsRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SearchCarsRequest) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *SearchCarsRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *SearchCarsRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *SearchCarsRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

// response
type SearchCarsReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	CarIds               []string `protobuf:"bytes,2,rep,name=CarIds,proto3" json:"CarIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCarsReply) Reset()         { *m = SearchCarsReply{} }
func (m *SearchCarsReply) String() string { return proto.CompactTextString(m) }
func (*SearchCarsReply) ProtoMessage()    {}
func (*SearchCarsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{3}
}
func (m *SearchCarsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCarsReply.Unmarshal(m, b)
}
func (m *SearchCarsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCarsReply.Marshal(b, m, deterministic)
}
func (dst *SearchCarsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCarsReply.Merge(dst, src)
}
func (m *SearchCarsReply) XXX_Size() int {
	return xxx_messageInfo_SearchCarsReply.Size(m)
}
func (m *SearchCarsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCarsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCarsReply proto.InternalMessageInfo

func (m *SearchCarsReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SearchCarsReply) GetCarIds() []string {
	if m != nil {
		return m.CarIds
	}
	return nil
}

type UseCarRequest struct {
	CarId                string   `protobuf:"bytes,1,opt,name=CarId,proto3" json:"CarId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Model                string   `protobuf:"bytes,3,opt,name=Model,proto3" json:"Model,omitempty"`
	PickupPlace          string   `protobuf:"bytes,4,opt,name=PickupPlace,proto3" json:"PickupPlace,omitempty"`
	DropPlace            string   `protobuf:"bytes,5,opt,name=DropPlace,proto3" json:"DropPlace,omitempty"`
	StartDate            string   `protobuf:"bytes,6,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate              string   `protobuf:"bytes,7,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseCarRequest) Reset()         { *m = UseCarRequest{} }
func (m *UseCarRequest) String() string { return proto.CompactTextString(m) }
func (*UseCarRequest) ProtoMessage()    {}
func (*UseCarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{4}
}
func (m *UseCarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseCarRequest.Unmarshal(m, b)
}
func (m *UseCarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseCarRequest.Marshal(b, m, deterministic)
}
func (dst *UseCarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseCarRequest.Merge(dst, src)
}
func (m *UseCarRequest) XXX_Size() int {
	return xxx_messageInfo_UseCarRequest.Size(m)
}
func (m *UseCarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UseCarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UseCarRequest proto.InternalMessageInfo

func (m *UseCarRequest) GetCarId() string {
	if m != nil {
		return m.CarId
	}
	return ""
}

func (m *UseCarRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UseCarRequest) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *UseCarRequest) GetPickupPlace() string {
	if m != nil {
		return m.PickupPlace
	}
	return ""
}

func (m *UseCarRequest) GetDropPlace() string {
	if m != nil {
		return m.DropPlace
	}
	return ""
}

func (m *UseCarRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *UseCarRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type UseCarReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	CarId                string   `protobuf:"bytes,2,opt,name=CarId,proto3" json:"CarId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseCarReply) Reset()         { *m = UseCarReply{} }
func (m *UseCarReply) String() string { return proto.CompactTextString(m) }
func (*UseCarReply) ProtoMessage()    {}
func (*UseCarReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{5}
}
func (m *UseCarReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseCarReply.Unmarshal(m, b)
}
func (m *UseCarReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseCarReply.Marshal(b, m, deterministic)
}
func (dst *UseCarReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseCarReply.Merge(dst, src)
}
func (m *UseCarReply) XXX_Size() int {
	return xxx_messageInfo_UseCarReply.Size(m)
}
func (m *UseCarReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UseCarReply.DiscardUnknown(m)
}

var xxx_messageInfo_UseCarReply proto.InternalMessageInfo

func (m *UseCarReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UseCarReply) GetCarId() string {
	if m != nil {
		return m.CarId
	}
	return ""
}

type ReturnCarRequest struct {
	CarId                string   `protobuf:"bytes,1,opt,name=CarId,proto3" json:"CarId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Place                string   `protobuf:"bytes,3,opt,name=Place,proto3" json:"Place,omitempty"`
	ReturnDate           string   `protobuf:"bytes,4,opt,name=ReturnDate,proto3" json:"ReturnDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnCarRequest) Reset()         { *m = ReturnCarRequest{} }
func (m *ReturnCarRequest) String() string { return proto.CompactTextString(m) }
func (*ReturnCarRequest) ProtoMessage()    {}
func (*ReturnCarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{6}
}
func (m *ReturnCarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnCarRequest.Unmarshal(m, b)
}
func (m *ReturnCarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnCarRequest.Marshal(b, m, deterministic)
}
func (dst *ReturnCarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnCarRequest.Merge(dst, src)
}
func (m *ReturnCarRequest) XXX_Size() int {
	return xxx_messageInfo_ReturnCarRequest.Size(m)
}
func (m *ReturnCarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnCarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnCarRequest proto.InternalMessageInfo

func (m *ReturnCarRequest) GetCarId() string {
	if m != nil {
		return m.CarId
	}
	return ""
}

func (m *ReturnCarRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ReturnCarRequest) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *ReturnCarRequest) GetReturnDate() string {
	if m != nil {
		return m.ReturnDate
	}
	return ""
}

type ReturnCarReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnCarReply) Reset()         { *m = ReturnCarReply{} }
func (m *ReturnCarReply) String() string { return proto.CompactTextString(m) }
func (*ReturnCarReply) ProtoMessage()    {}
func (*ReturnCarReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_sharing_3ee41b0aea0cf27d, []int{7}
}
func (m *ReturnCarReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnCarReply.Unmarshal(m, b)
}
func (m *ReturnCarReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnCarReply.Marshal(b, m, deterministic)
}
func (dst *ReturnCarReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnCarReply.Merge(dst, src)
}
func (m *ReturnCarReply) XXX_Size() int {
	return xxx_messageInfo_ReturnCarReply.Size(m)
}
func (m *ReturnCarReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnCarReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnCarReply proto.InternalMessageInfo

func (m *ReturnCarReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterCarRequest)(nil), "CarSharing.RegisterCarRequest")
	proto.RegisterType((*RegisterCarReply)(nil), "CarSharing.RegisterCarReply")
	proto.RegisterType((*SearchCarsRequest)(nil), "CarSharing.SearchCarsRequest")
	proto.RegisterType((*SearchCarsReply)(nil), "CarSharing.SearchCarsReply")
	proto.RegisterType((*UseCarRequest)(nil), "CarSharing.UseCarRequest")
	proto.RegisterType((*UseCarReply)(nil), "CarSharing.UseCarReply")
	proto.RegisterType((*ReturnCarRequest)(nil), "CarSharing.ReturnCarRequest")
	proto.RegisterType((*ReturnCarReply)(nil), "CarSharing.ReturnCarReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarSharingClient is the client API for CarSharing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarSharingClient interface {
	RegisterCar(ctx context.Context, in *RegisterCarRequest, opts ...grpc.CallOption) (*RegisterCarReply, error)
	SearchCars(ctx context.Context, in *SearchCarsRequest, opts ...grpc.CallOption) (*SearchCarsReply, error)
	UseCar(ctx context.Context, in *UseCarRequest, opts ...grpc.CallOption) (*UseCarReply, error)
	ReturnCar(ctx context.Context, in *ReturnCarRequest, opts ...grpc.CallOption) (*ReturnCarReply, error)
}

type carSharingClient struct {
	cc *grpc.ClientConn
}

func NewCarSharingClient(cc *grpc.ClientConn) CarSharingClient {
	return &carSharingClient{cc}
}

func (c *carSharingClient) RegisterCar(ctx context.Context, in *RegisterCarRequest, opts ...grpc.CallOption) (*RegisterCarReply, error) {
	out := new(RegisterCarReply)
	err := c.cc.Invoke(ctx, "/CarSharing.CarSharing/RegisterCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carSharingClient) SearchCars(ctx context.Context, in *SearchCarsRequest, opts ...grpc.CallOption) (*SearchCarsReply, error) {
	out := new(SearchCarsReply)
	err := c.cc.Invoke(ctx, "/CarSharing.CarSharing/SearchCars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carSharingClient) UseCar(ctx context.Context, in *UseCarRequest, opts ...grpc.CallOption) (*UseCarReply, error) {
	out := new(UseCarReply)
	err := c.cc.Invoke(ctx, "/CarSharing.CarSharing/UseCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carSharingClient) ReturnCar(ctx context.Context, in *ReturnCarRequest, opts ...grpc.CallOption) (*ReturnCarReply, error) {
	out := new(ReturnCarReply)
	err := c.cc.Invoke(ctx, "/CarSharing.CarSharing/ReturnCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarSharingServer is the server API for CarSharing service.
type CarSharingServer interface {
	RegisterCar(context.Context, *RegisterCarRequest) (*RegisterCarReply, error)
	SearchCars(context.Context, *SearchCarsRequest) (*SearchCarsReply, error)
	UseCar(context.Context, *UseCarRequest) (*UseCarReply, error)
	ReturnCar(context.Context, *ReturnCarRequest) (*ReturnCarReply, error)
}

func RegisterCarSharingServer(s *grpc.Server, srv CarSharingServer) {
	s.RegisterService(&_CarSharing_serviceDesc, srv)
}

func _CarSharing_RegisterCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarSharingServer).RegisterCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarSharing.CarSharing/RegisterCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarSharingServer).RegisterCar(ctx, req.(*RegisterCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarSharing_SearchCars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCarsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarSharingServer).SearchCars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarSharing.CarSharing/SearchCars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarSharingServer).SearchCars(ctx, req.(*SearchCarsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarSharing_UseCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarSharingServer).UseCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarSharing.CarSharing/UseCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarSharingServer).UseCar(ctx, req.(*UseCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CarSharing_ReturnCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarSharingServer).ReturnCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarSharing.CarSharing/ReturnCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarSharingServer).ReturnCar(ctx, req.(*ReturnCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarSharing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CarSharing.CarSharing",
	HandlerType: (*CarSharingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterCar",
			Handler:    _CarSharing_RegisterCar_Handler,
		},
		{
			MethodName: "SearchCars",
			Handler:    _CarSharing_SearchCars_Handler,
		},
		{
			MethodName: "UseCar",
			Handler:    _CarSharing_UseCar_Handler,
		},
		{
			MethodName: "ReturnCar",
			Handler:    _CarSharing_ReturnCar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car_sharing.proto",
}

func init() { proto.RegisterFile("car_sharing.proto", fileDescriptor_car_sharing_3ee41b0aea0cf27d) }

var fileDescriptor_car_sharing_3ee41b0aea0cf27d = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xc1, 0xae, 0x93, 0x40,
	0x14, 0x15, 0xea, 0xe3, 0xd9, 0xdb, 0x68, 0xed, 0xc4, 0x54, 0xc4, 0xda, 0x34, 0xc4, 0x45, 0x57,
	0x2c, 0x74, 0x65, 0x4c, 0x8c, 0x96, 0x1a, 0xa3, 0x49, 0x95, 0x94, 0x74, 0x6d, 0xa6, 0x30, 0x69,
	0x49, 0x29, 0xe0, 0xcc, 0xa0, 0xa9, 0xbf, 0x61, 0xe2, 0x77, 0xf8, 0x27, 0xfe, 0x92, 0x61, 0xa6,
	0xc0, 0x60, 0x4b, 0x13, 0x63, 0xf2, 0x76, 0x9c, 0x73, 0xe0, 0x72, 0xcf, 0xb9, 0x77, 0x06, 0x06,
	0x01, 0xa6, 0x9f, 0xd9, 0x16, 0xd3, 0x28, 0xd9, 0x38, 0x19, 0x4d, 0x79, 0x8a, 0xc0, 0xc5, 0xd4,
	0x97, 0x8c, 0xfd, 0x53, 0x03, 0xb4, 0x24, 0x9b, 0x88, 0x71, 0x42, 0x5d, 0x4c, 0x97, 0xe4, 0x4b,
	0x4e, 0x18, 0x47, 0x23, 0xe8, 0x7e, 0xfa, 0x96, 0x10, 0xfa, 0x11, 0xef, 0x89, 0xa9, 0x4d, 0xb4,
	0x69, 0x77, 0x59, 0x13, 0xe8, 0x01, 0x5c, 0x2d, 0xd2, 0x90, 0xc4, 0xa6, 0x2e, 0x14, 0x09, 0x0a,
	0xd6, 0x8b, 0x71, 0x40, 0xcc, 0x8e, 0x64, 0x05, 0x28, 0x2a, 0xf9, 0x1c, 0x53, 0x3e, 0xc7, 0x9c,
	0x98, 0xb7, 0x65, 0xa5, 0x8a, 0x40, 0x26, 0x5c, 0xbf, 0x4d, 0x42, 0xa1, 0x5d, 0x09, 0xad, 0x84,
	0xf6, 0x6b, 0xb8, 0xdf, 0xe8, 0x2b, 0x8b, 0x0f, 0x68, 0x08, 0x86, 0xcf, 0x31, 0xcf, 0xd9, 0xb1,
	0xa5, 0x23, 0x2a, 0xfe, 0xec, 0x62, 0xfa, 0x3e, 0x2c, 0xfb, 0x11, 0xc0, 0xfe, 0xa1, 0xc1, 0xc0,
	0x27, 0x98, 0x06, 0x5b, 0x17, 0x53, 0x56, 0x3a, 0xb3, 0xe0, 0xce, 0x8a, 0x35, 0x8c, 0x55, 0xf8,
	0x46, 0x7c, 0xbd, 0x81, 0xbe, 0xda, 0xd4, 0x25, 0x5b, 0x43, 0x30, 0x84, 0x13, 0x66, 0xea, 0x93,
	0x4e, 0xc1, 0x4b, 0x64, 0xff, 0xd6, 0xe0, 0xee, 0x8a, 0x11, 0x65, 0x5c, 0x55, 0x00, 0x9a, 0x12,
	0x40, 0xc3, 0xaa, 0xde, 0x66, 0xb5, 0xa3, 0x5a, 0x9d, 0x40, 0xcf, 0x8b, 0x82, 0x5d, 0x9e, 0x49,
	0xc3, 0xd2, 0x96, 0x4a, 0x15, 0xb6, 0xe7, 0x34, 0x3d, 0xea, 0xd2, 0x5a, 0x4d, 0x34, 0x43, 0x31,
	0x2e, 0x84, 0x72, 0xdd, 0x0c, 0xe5, 0x25, 0xf4, 0x4a, 0x43, 0xff, 0x3e, 0xe7, 0xef, 0xc5, 0xa6,
	0xf0, 0x9c, 0x26, 0xff, 0x1b, 0xc8, 0x99, 0x29, 0x8f, 0x01, 0x64, 0x6d, 0x65, 0xcc, 0x0a, 0x63,
	0x4f, 0xe1, 0x9e, 0xf2, 0xef, 0x0b, 0xbd, 0x3f, 0xfb, 0xa5, 0x83, 0x72, 0xee, 0xd0, 0x02, 0x7a,
	0xca, 0x7a, 0xa3, 0xb1, 0x53, 0x6b, 0xce, 0xe9, 0x79, 0xb4, 0x46, 0xad, 0x7a, 0x16, 0x1f, 0xec,
	0x5b, 0xe8, 0x03, 0x40, 0xbd, 0x55, 0xe8, 0x89, 0xfa, 0xf6, 0xc9, 0x11, 0xb0, 0x1e, 0xb7, 0xc9,
	0xb2, 0xd6, 0x2b, 0x30, 0xe4, 0x30, 0xd0, 0x23, 0xf5, 0xc5, 0xc6, 0xc6, 0x59, 0x0f, 0xcf, 0x49,
	0xf2, 0xfb, 0x77, 0xd0, 0xad, 0x32, 0x41, 0x7f, 0x35, 0xde, 0x1c, 0x93, 0x65, 0xb5, 0xa8, 0xa2,
	0xd0, 0xec, 0x05, 0x3c, 0x0d, 0xd2, 0xbd, 0xb3, 0x89, 0xf8, 0x36, 0x5f, 0x3b, 0x6b, 0x1c, 0xec,
	0x48, 0x12, 0x32, 0x42, 0xbf, 0x46, 0x01, 0x51, 0x3e, 0x9c, 0xf5, 0xeb, 0x67, 0xaf, 0xb8, 0xe0,
	0x3c, 0x6d, 0x6d, 0x88, 0x9b, 0xee, 0xf9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x76, 0x14, 0xbc,
	0xed, 0xfe, 0x04, 0x00, 0x00,
}
